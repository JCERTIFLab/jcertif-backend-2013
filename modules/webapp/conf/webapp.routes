# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file           	controllers.webapp.Assets.at(file)
GET		/							controllers.webapp.HomeController.get
GET    	/participant/get/:emailParticipant    controllers.webapp.HomeController.getParticipantProxy(emailParticipant: String)
POST 	/ref/category/new			controllers.webapp.HomeController.newCategoryProxy
POST 	/ref/category/remove		controllers.webapp.HomeController.removeCategoryProxy
POST	/ref/sponsorlevel/new		controllers.webapp.HomeController.addSponsorLevelProxy
POST	/ref/sponsorlevel/remove	controllers.webapp.HomeController.removeSponsorLevelProxy
POST 	/ref/title/new				controllers.webapp.HomeController.addTitleProxy
POST 	/ref/title/remove			controllers.webapp.HomeController.removeTitleProxy
POST    /ref/sessionstatus/new      controllers.webapp.HomeController.addSessionStatusProxy
POST    /ref/sessionstatus/remove   controllers.webapp.HomeController.removeSessionStatusProxy

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized